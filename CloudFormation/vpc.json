{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
        
        "HomeWorkVPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.12.0.0/16",
                "Tags": [
                    {
                      "Key": "Name",
                      "Value": "VPC for Homework"
                    }
                  ]
            }
        },
        
        "PrivSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "HomeWorkVPC",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"},
                "AvailabilityZone": {"Fn::Select":["0",{"Fn::GetAZs": {"Ref":"AWS::Region"}}]},
                "CidrBlock": "10.12.0.0/24",
                "Tags": [
                    {
                      "Key": "Name",
                      "Value": "Private subnet #1"
                    }
                  ]
            }
        },

        "PrivSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "HomeWorkVPC",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"},
                "AvailabilityZone": {"Fn::Select":["1",{"Fn::GetAZs": {"Ref":"AWS::Region"}}]},
                "CidrBlock": "10.12.2.0/24",
                "Tags": [
                    {
                      "Key": "Name",
                      "Value": "Private subnet #2"
                    }
                  ]
            }
        },

        "PubSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "HomeWorkVPC",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"},
                "AvailabilityZone": {"Fn::Select":["0",{"Fn::GetAZs": {"Ref":"AWS::Region"}}]},
                "CidrBlock": "10.12.10.0/24",
                "MapPublicIpOnLaunch": "True",
                "Tags": [
                    {
                      "Key": "Name",
                      "Value": "Public subnet #2"
                    }
                  ]
            }
        },

        "PubSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "HomeWorkVPC",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"},
                "AvailabilityZone": {"Fn::Select":["1",{"Fn::GetAZs": {"Ref":"AWS::Region"}}]},
                "CidrBlock": "10.12.12.0/24",
                "MapPublicIpOnLaunch": "True",
                "Tags": [
                    {
                      "Key": "Name",
                      "Value": "Public subnet #2"
                    }
                  ]
            }
        },

        
        "PubRoute": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"}
            }
        },
        

        "VPCDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {"Ref": "PubRoute"},
                "GatewayId": {"Ref": "IGW1"},
                "DestinationCidrBlock": "0.0.0.0/0"
            }
        },

        "PubRoute1": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
              "RouteTableId" : {"Ref": "PubRoute"},
              "SubnetId" :  {"Ref" : "PubSubnet1"}
           }
        },

        "PubRoute2": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
              "RouteTableId" : {"Ref": "PubRoute"},
              "SubnetId" :  {"Ref" : "PubSubnet2"}
           }
        },

        "IGW1": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}            
        },


        "IGWAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties":{
                "InternetGatewayId": {"Ref": "IGW1"},
                "VpcId": {"Ref": "HomeWorkVPC"}
            }            
        },


        "NATGateway1": {
            "DependsOn": "IGWAttachment",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
              "AllocationId": {
                "Fn::GetAtt": [
                  "ElasticIP1",
                  "AllocationId"
                ]
              },
              "SubnetId": {
                "Ref": "PubSubnet1"
              }
            }
          },
          "ElasticIP1": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
              "Domain": "vpc"
            }
          },

          "NATGateway2": {
            "DependsOn": "IGWAttachment",
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
              "AllocationId": {
                "Fn::GetAtt": [
                  "ElasticIP2",
                  "AllocationId"
                ]
              },
              "SubnetId": {
                "Ref": "PubSubnet2"
              }
            }
          },
          "ElasticIP2": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
              "Domain": "vpc"
            }
          },



          "PrivRoute1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"}
            }
        },

        "RTAPriv1": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
              "RouteTableId" : {"Ref": "PrivRoute1"},
              "SubnetId" :  {"Ref" : "PrivSubnet1"}
           }
        },
        "PrivRoute2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"}
            }
        },

        "RTAPriv2": {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
              "RouteTableId" : {"Ref": "PrivRoute2"},
              "SubnetId" :  {"Ref" : "PrivSubnet2"}
           }
        },


        
        "PrivateDefaultRoute1": {
            "DependsOn": "NATGateway1",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {"Ref": "PrivRoute1"},
                "NatGatewayId": {"Ref": "NATGateway1"},
                "DestinationCidrBlock": "0.0.0.0/0"
            }
        },

        "PrivateDefaultRoute2": {
            "DependsOn": "NATGateway2",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {"Ref": "PrivRoute2"},
                "NatGatewayId": {"Ref": "NATGateway2"},
                "DestinationCidrBlock": "0.0.0.0/0"
            }
        },



        "DHCPOptions1": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": "epam.com",
                "DomainNameServers" : [ "AmazonProvidedDNS" ]
            }            
        },

        "DHCPOptAssoc": { 
           "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
           "Properties" : {
              "DhcpOptionsId" : {"Ref":"DHCPOptions1"},
              "VpcId" : {"Ref": "HomeWorkVPC"}
           }
        },

        "NetAcl1": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {"Ref": "HomeWorkVPC"}
            }
        },

        "NetAclEntryEgress": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {"Ref": "NetAcl1"},
                "CidrBlock": "0.0.0.0/0",
                "Egress": "True",
                "Protocol": "-1",
                "RuleAction": "Allow",
                "RuleNumber": "100"
            }
        },

        "NetAclEntryIngress": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {"Ref": "NetAcl1"},
                "CidrBlock": "0.0.0.0/0",
                "Egress": "False",
                "Protocol": "-1",
                "RuleAction": "Allow",
                "RuleNumber": "100"
            }
        },

        "AclAssoc1": {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
               "SubnetId" : {"Ref": "PubSubnet1"},
               "NetworkAclId" : {"Ref": "NetAcl1"} 
            }
        },

        "AclAssoc2": {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
               "SubnetId" : {"Ref": "PubSubnet2"},
               "NetworkAclId" : {"Ref": "NetAcl1"} 
            }
        },

        "AclAssoc3": {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
               "SubnetId" : {"Ref": "PrivSubnet1"},
               "NetworkAclId" : {"Ref": "NetAcl1"} 
            }
        },
        "AclAssoc4": {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
               "SubnetId" : {"Ref": "PrivSubnet2"},
               "NetworkAclId" : {"Ref": "NetAcl1"} 
            }
        },

        

        "SecGroup": {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
             "GroupName" : {"Fn::Sub":"Test-VPC-SG-${AWS::StackName}"},
             "GroupDescription" : "Test VPC Sec group",
             "SecurityGroupIngress" : [
                {
                  "CidrIp" : "0.0.0.0/0",
                  "FromPort" : "22",
                  "ToPort" : "22",
                  "IpProtocol" : "tcp"
                },
                {
                  "SourceSecurityGroupId": {"Ref":"ELBSecGroup"},
                  "FromPort" : "80",
                  "ToPort" : "80",
                  "IpProtocol" : "tcp"
                }
             ],
             "VpcId" : {"Ref": "HomeWorkVPC"},
             "Tags": [
                {
                    "Key": "Name",
                    "Value": {"Fn::Sub":"Test-VPC-SG-${AWS::StackName}"}
                }
             ]
          }
        },

        "ELBSecGroup": {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
             "GroupName" : {"Fn::Sub":"Test-VPC-ELB-SG-${AWS::StackName}"},
             "GroupDescription" : "Test VPC Sec group for ELB",
             "SecurityGroupIngress" : [                
                {
                  "CidrIp" : "0.0.0.0/0",
                  "FromPort" : "80",
                  "ToPort" : "80",
                  "IpProtocol" : "tcp"
                }
             ],
             "VpcId" : {"Ref": "HomeWorkVPC"},
             "Tags": [
                {
                    "Key": "Name",
                    "Value": {"Fn::Sub":"Test-VPC-ELB-SG-${AWS::StackName}"}
                }
             ]
          }
        }
    },

    "Outputs": {
        "VpcId": {
            "Value": {"Ref": "HomeWorkVPC"}
        },

        "PrivSubnet1Id": {
            "Value": {"Ref": "PrivSubnet1"}
        },
        
        "PrivSubnet2Id": {
            "Value": {"Ref": "PrivSubnet2"}
        },
        
        "PubSubnet1Id": {
            "Value": {"Ref": "PubSubnet1"}
        },
        
        "PubSubnet2Id": {
            "Value": {"Ref": "PubSubnet2"}
        },
        




        "SecurityGroupId": {
            "Value": {"Ref": "SecGroup"}
        },

        "ELBSecurityGroupId": {
            "Value": {"Ref": "ELBSecGroup"}
        },

        "Priv1AZ" : {
            "Value": {"Fn::GetAtt":["PrivSubnet1", "AvailabilityZone"]}
        },

        "Priv2AZ" : {
            "Value": {"Fn::GetAtt":["PrivSubnet2", "AvailabilityZone"]}
        },

        "SubnetAZ": {
            "Value": {"Fn::GetAtt":["PubSubnet1", "AvailabilityZone"]}
        }
    }
}